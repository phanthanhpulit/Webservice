#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ShopLaptop")]
	public partial class LinqtoSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChitietHD(ChitietHD instance);
    partial void UpdateChitietHD(ChitietHD instance);
    partial void DeleteChitietHD(ChitietHD instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertChitietPN(ChitietPN instance);
    partial void UpdateChitietPN(ChitietPN instance);
    partial void DeleteChitietPN(ChitietPN instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertHoaDon_SanPham(HoaDon_SanPham instance);
    partial void UpdateHoaDon_SanPham(HoaDon_SanPham instance);
    partial void DeleteHoaDon_SanPham(HoaDon_SanPham instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertKho(Kho instance);
    partial void UpdateKho(Kho instance);
    partial void DeleteKho(Kho instance);
    partial void InsertLoaiSP(LoaiSP instance);
    partial void UpdateLoaiSP(LoaiSP instance);
    partial void DeleteLoaiSP(LoaiSP instance);
    partial void InsertPhieuNhap(PhieuNhap instance);
    partial void UpdatePhieuNhap(PhieuNhap instance);
    partial void DeletePhieuNhap(PhieuNhap instance);
    partial void InsertPhieuNhap_SanPham(PhieuNhap_SanPham instance);
    partial void UpdatePhieuNhap_SanPham(PhieuNhap_SanPham instance);
    partial void DeletePhieuNhap_SanPham(PhieuNhap_SanPham instance);
    #endregion
		
		public LinqtoSQLDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ShopLaptopConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqtoSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqtoSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqtoSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqtoSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChitietHD> ChitietHDs
		{
			get
			{
				return this.GetTable<ChitietHD>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<ChitietPN> ChitietPNs
		{
			get
			{
				return this.GetTable<ChitietPN>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon_SanPham> HoaDon_SanPhams
		{
			get
			{
				return this.GetTable<HoaDon_SanPham>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<Kho> Khos
		{
			get
			{
				return this.GetTable<Kho>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSP> LoaiSPs
		{
			get
			{
				return this.GetTable<LoaiSP>();
			}
		}
		
		public System.Data.Linq.Table<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this.GetTable<PhieuNhap>();
			}
		}
		
		public System.Data.Linq.Table<PhieuNhap_SanPham> PhieuNhap_SanPhams
		{
			get
			{
				return this.GetTable<PhieuNhap_SanPham>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChitietHD")]
	public partial class ChitietHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _mahd;
		
		private string _masp;
		
		private System.Nullable<int> _soluong;
		
		private System.Nullable<int> _gia;
		
		private System.Nullable<int> _thanhtien;
		
		private EntityRef<HoaDon> _HoaDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmahdChanging(string value);
    partial void OnmahdChanged();
    partial void OnmaspChanging(string value);
    partial void OnmaspChanged();
    partial void OnsoluongChanging(System.Nullable<int> value);
    partial void OnsoluongChanged();
    partial void OngiaChanging(System.Nullable<int> value);
    partial void OngiaChanged();
    partial void OnthanhtienChanging(System.Nullable<int> value);
    partial void OnthanhtienChanged();
    #endregion
		
		public ChitietHD()
		{
			this._HoaDon = default(EntityRef<HoaDon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mahd", DbType="NVarChar(50)")]
		public string mahd
		{
			get
			{
				return this._mahd;
			}
			set
			{
				if ((this._mahd != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmahdChanging(value);
					this.SendPropertyChanging();
					this._mahd = value;
					this.SendPropertyChanged("mahd");
					this.OnmahdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masp", DbType="NVarChar(50)")]
		public string masp
		{
			get
			{
				return this._masp;
			}
			set
			{
				if ((this._masp != value))
				{
					this.OnmaspChanging(value);
					this.SendPropertyChanging();
					this._masp = value;
					this.SendPropertyChanged("masp");
					this.OnmaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int")]
		public System.Nullable<int> soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="Int")]
		public System.Nullable<int> gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this.OngiaChanging(value);
					this.SendPropertyChanging();
					this._gia = value;
					this.SendPropertyChanged("gia");
					this.OngiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhtien", DbType="Int")]
		public System.Nullable<int> thanhtien
		{
			get
			{
				return this._thanhtien;
			}
			set
			{
				if ((this._thanhtien != value))
				{
					this.OnthanhtienChanging(value);
					this.SendPropertyChanging();
					this._thanhtien = value;
					this.SendPropertyChanged("thanhtien");
					this.OnthanhtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChitietHD", Storage="_HoaDon", ThisKey="mahd", OtherKey="mahd", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.ChitietHDs.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.ChitietHDs.Add(this);
						this._mahd = value.mahd;
					}
					else
					{
						this._mahd = default(string);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _masp;
		
		private string _tensp;
		
		private System.Nullable<int> _gia;
		
		private string _hinh;
		
		private string _maloai;
		
		private string _CPU;
		
		private string _RAM;
		
		private string _HDD;
		
		private string _VGA;
		
		private string _display;
		
		private string _wireless;
		
		private string _battery;
		
		private string _weight;
		
		private string _baohanh;
		
		private string _chitiet;
		
		private System.Nullable<bool> _active;
		
		private EntitySet<HoaDon_SanPham> _HoaDon_SanPhams;
		
		private EntitySet<PhieuNhap_SanPham> _PhieuNhap_SanPhams;
		
		private EntityRef<LoaiSP> _LoaiSP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmaspChanging(string value);
    partial void OnmaspChanged();
    partial void OntenspChanging(string value);
    partial void OntenspChanged();
    partial void OngiaChanging(System.Nullable<int> value);
    partial void OngiaChanged();
    partial void OnhinhChanging(string value);
    partial void OnhinhChanged();
    partial void OnmaloaiChanging(string value);
    partial void OnmaloaiChanged();
    partial void OnCPUChanging(string value);
    partial void OnCPUChanged();
    partial void OnRAMChanging(string value);
    partial void OnRAMChanged();
    partial void OnHDDChanging(string value);
    partial void OnHDDChanged();
    partial void OnVGAChanging(string value);
    partial void OnVGAChanged();
    partial void OndisplayChanging(string value);
    partial void OndisplayChanged();
    partial void OnwirelessChanging(string value);
    partial void OnwirelessChanged();
    partial void OnbatteryChanging(string value);
    partial void OnbatteryChanged();
    partial void OnweightChanging(string value);
    partial void OnweightChanged();
    partial void OnbaohanhChanging(string value);
    partial void OnbaohanhChanged();
    partial void OnchitietChanging(string value);
    partial void OnchitietChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    #endregion
		
		public SanPham()
		{
			this._HoaDon_SanPhams = new EntitySet<HoaDon_SanPham>(new Action<HoaDon_SanPham>(this.attach_HoaDon_SanPhams), new Action<HoaDon_SanPham>(this.detach_HoaDon_SanPhams));
			this._PhieuNhap_SanPhams = new EntitySet<PhieuNhap_SanPham>(new Action<PhieuNhap_SanPham>(this.attach_PhieuNhap_SanPhams), new Action<PhieuNhap_SanPham>(this.detach_PhieuNhap_SanPhams));
			this._LoaiSP = default(EntityRef<LoaiSP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masp", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string masp
		{
			get
			{
				return this._masp;
			}
			set
			{
				if ((this._masp != value))
				{
					this.OnmaspChanging(value);
					this.SendPropertyChanging();
					this._masp = value;
					this.SendPropertyChanged("masp");
					this.OnmaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tensp", DbType="NVarChar(MAX)")]
		public string tensp
		{
			get
			{
				return this._tensp;
			}
			set
			{
				if ((this._tensp != value))
				{
					this.OntenspChanging(value);
					this.SendPropertyChanging();
					this._tensp = value;
					this.SendPropertyChanged("tensp");
					this.OntenspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="Int")]
		public System.Nullable<int> gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this.OngiaChanging(value);
					this.SendPropertyChanging();
					this._gia = value;
					this.SendPropertyChanged("gia");
					this.OngiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hinh", DbType="NVarChar(MAX)")]
		public string hinh
		{
			get
			{
				return this._hinh;
			}
			set
			{
				if ((this._hinh != value))
				{
					this.OnhinhChanging(value);
					this.SendPropertyChanging();
					this._hinh = value;
					this.SendPropertyChanged("hinh");
					this.OnhinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maloai", DbType="NVarChar(50)")]
		public string maloai
		{
			get
			{
				return this._maloai;
			}
			set
			{
				if ((this._maloai != value))
				{
					if (this._LoaiSP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaloaiChanging(value);
					this.SendPropertyChanging();
					this._maloai = value;
					this.SendPropertyChanged("maloai");
					this.OnmaloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPU", DbType="NVarChar(MAX)")]
		public string CPU
		{
			get
			{
				return this._CPU;
			}
			set
			{
				if ((this._CPU != value))
				{
					this.OnCPUChanging(value);
					this.SendPropertyChanging();
					this._CPU = value;
					this.SendPropertyChanged("CPU");
					this.OnCPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAM", DbType="NVarChar(50)")]
		public string RAM
		{
			get
			{
				return this._RAM;
			}
			set
			{
				if ((this._RAM != value))
				{
					this.OnRAMChanging(value);
					this.SendPropertyChanging();
					this._RAM = value;
					this.SendPropertyChanged("RAM");
					this.OnRAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDD", DbType="NVarChar(50)")]
		public string HDD
		{
			get
			{
				return this._HDD;
			}
			set
			{
				if ((this._HDD != value))
				{
					this.OnHDDChanging(value);
					this.SendPropertyChanging();
					this._HDD = value;
					this.SendPropertyChanged("HDD");
					this.OnHDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VGA", DbType="NVarChar(MAX)")]
		public string VGA
		{
			get
			{
				return this._VGA;
			}
			set
			{
				if ((this._VGA != value))
				{
					this.OnVGAChanging(value);
					this.SendPropertyChanging();
					this._VGA = value;
					this.SendPropertyChanged("VGA");
					this.OnVGAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_display", DbType="NVarChar(MAX)")]
		public string display
		{
			get
			{
				return this._display;
			}
			set
			{
				if ((this._display != value))
				{
					this.OndisplayChanging(value);
					this.SendPropertyChanging();
					this._display = value;
					this.SendPropertyChanged("display");
					this.OndisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wireless", DbType="NVarChar(50)")]
		public string wireless
		{
			get
			{
				return this._wireless;
			}
			set
			{
				if ((this._wireless != value))
				{
					this.OnwirelessChanging(value);
					this.SendPropertyChanging();
					this._wireless = value;
					this.SendPropertyChanged("wireless");
					this.OnwirelessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_battery", DbType="NVarChar(MAX)")]
		public string battery
		{
			get
			{
				return this._battery;
			}
			set
			{
				if ((this._battery != value))
				{
					this.OnbatteryChanging(value);
					this.SendPropertyChanging();
					this._battery = value;
					this.SendPropertyChanged("battery");
					this.OnbatteryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="NVarChar(MAX)")]
		public string weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baohanh", DbType="NVarChar(50)")]
		public string baohanh
		{
			get
			{
				return this._baohanh;
			}
			set
			{
				if ((this._baohanh != value))
				{
					this.OnbaohanhChanging(value);
					this.SendPropertyChanging();
					this._baohanh = value;
					this.SendPropertyChanged("baohanh");
					this.OnbaohanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chitiet", DbType="NVarChar(MAX)")]
		public string chitiet
		{
			get
			{
				return this._chitiet;
			}
			set
			{
				if ((this._chitiet != value))
				{
					this.OnchitietChanging(value);
					this.SendPropertyChanging();
					this._chitiet = value;
					this.SendPropertyChanged("chitiet");
					this.OnchitietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_HoaDon_SanPham", Storage="_HoaDon_SanPhams", ThisKey="masp", OtherKey="masp")]
		internal EntitySet<HoaDon_SanPham> HoaDon_SanPhams
		{
			get
			{
				return this._HoaDon_SanPhams;
			}
			set
			{
				this._HoaDon_SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_PhieuNhap_SanPham", Storage="_PhieuNhap_SanPhams", ThisKey="masp", OtherKey="masp")]
		internal EntitySet<PhieuNhap_SanPham> PhieuNhap_SanPhams
		{
			get
			{
				return this._PhieuNhap_SanPhams;
			}
			set
			{
				this._PhieuNhap_SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_SanPham", Storage="_LoaiSP", ThisKey="maloai", OtherKey="maloai", IsForeignKey=true)]
		public LoaiSP LoaiSP
		{
			get
			{
				return this._LoaiSP.Entity;
			}
			set
			{
				LoaiSP previousValue = this._LoaiSP.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSP.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSP.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._maloai = value.maloai;
					}
					else
					{
						this._maloai = default(string);
					}
					this.SendPropertyChanged("LoaiSP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDon_SanPhams(HoaDon_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_HoaDon_SanPhams(HoaDon_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_PhieuNhap_SanPhams(PhieuNhap_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_PhieuNhap_SanPhams(PhieuNhap_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChitietPN")]
	public partial class ChitietPN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _mapn;
		
		private string _masp;
		
		private System.Nullable<int> _soluong;
		
		private EntityRef<PhieuNhap> _PhieuNhap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmapnChanging(string value);
    partial void OnmapnChanged();
    partial void OnmaspChanging(string value);
    partial void OnmaspChanged();
    partial void OnsoluongChanging(System.Nullable<int> value);
    partial void OnsoluongChanged();
    #endregion
		
		public ChitietPN()
		{
			this._PhieuNhap = default(EntityRef<PhieuNhap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mapn", DbType="NVarChar(50)")]
		public string mapn
		{
			get
			{
				return this._mapn;
			}
			set
			{
				if ((this._mapn != value))
				{
					if (this._PhieuNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmapnChanging(value);
					this.SendPropertyChanging();
					this._mapn = value;
					this.SendPropertyChanged("mapn");
					this.OnmapnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masp", DbType="NVarChar(50)")]
		public string masp
		{
			get
			{
				return this._masp;
			}
			set
			{
				if ((this._masp != value))
				{
					this.OnmaspChanging(value);
					this.SendPropertyChanging();
					this._masp = value;
					this.SendPropertyChanged("masp");
					this.OnmaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int")]
		public System.Nullable<int> soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_ChitietPN", Storage="_PhieuNhap", ThisKey="mapn", OtherKey="mapn", IsForeignKey=true)]
		public PhieuNhap PhieuNhap
		{
			get
			{
				return this._PhieuNhap.Entity;
			}
			set
			{
				PhieuNhap previousValue = this._PhieuNhap.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhap.Entity = null;
						previousValue.ChitietPNs.Remove(this);
					}
					this._PhieuNhap.Entity = value;
					if ((value != null))
					{
						value.ChitietPNs.Add(this);
						this._mapn = value.mapn;
					}
					else
					{
						this._mapn = default(string);
					}
					this.SendPropertyChanged("PhieuNhap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mahd;
		
		private string _username;
		
		private System.Nullable<System.DateTime> _ngaylap;
		
		private System.Nullable<System.DateTime> _ngaythanhtoan;
		
		private System.Nullable<int> _trangthai;
		
		private System.Nullable<bool> _active;
		
		private int _id;
		
		private EntitySet<ChitietHD> _ChitietHDs;
		
		private EntitySet<HoaDon_SanPham> _HoaDon_SanPhams;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmahdChanging(string value);
    partial void OnmahdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnngaylapChanging(System.Nullable<System.DateTime> value);
    partial void OnngaylapChanged();
    partial void OnngaythanhtoanChanging(System.Nullable<System.DateTime> value);
    partial void OnngaythanhtoanChanged();
    partial void OntrangthaiChanging(System.Nullable<int> value);
    partial void OntrangthaiChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public HoaDon()
		{
			this._ChitietHDs = new EntitySet<ChitietHD>(new Action<ChitietHD>(this.attach_ChitietHDs), new Action<ChitietHD>(this.detach_ChitietHDs));
			this._HoaDon_SanPhams = new EntitySet<HoaDon_SanPham>(new Action<HoaDon_SanPham>(this.attach_HoaDon_SanPhams), new Action<HoaDon_SanPham>(this.detach_HoaDon_SanPhams));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mahd", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mahd
		{
			get
			{
				return this._mahd;
			}
			set
			{
				if ((this._mahd != value))
				{
					this.OnmahdChanging(value);
					this.SendPropertyChanging();
					this._mahd = value;
					this.SendPropertyChanged("mahd");
					this.OnmahdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaylap", DbType="Date")]
		public System.Nullable<System.DateTime> ngaylap
		{
			get
			{
				return this._ngaylap;
			}
			set
			{
				if ((this._ngaylap != value))
				{
					this.OnngaylapChanging(value);
					this.SendPropertyChanging();
					this._ngaylap = value;
					this.SendPropertyChanged("ngaylap");
					this.OnngaylapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaythanhtoan", DbType="Date")]
		public System.Nullable<System.DateTime> ngaythanhtoan
		{
			get
			{
				return this._ngaythanhtoan;
			}
			set
			{
				if ((this._ngaythanhtoan != value))
				{
					this.OnngaythanhtoanChanging(value);
					this.SendPropertyChanging();
					this._ngaythanhtoan = value;
					this.SendPropertyChanged("ngaythanhtoan");
					this.OnngaythanhtoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangthai", DbType="Int")]
		public System.Nullable<int> trangthai
		{
			get
			{
				return this._trangthai;
			}
			set
			{
				if ((this._trangthai != value))
				{
					this.OntrangthaiChanging(value);
					this.SendPropertyChanging();
					this._trangthai = value;
					this.SendPropertyChanged("trangthai");
					this.OntrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChitietHD", Storage="_ChitietHDs", ThisKey="mahd", OtherKey="mahd")]
		internal EntitySet<ChitietHD> ChitietHDs
		{
			get
			{
				return this._ChitietHDs;
			}
			set
			{
				this._ChitietHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_HoaDon_SanPham", Storage="_HoaDon_SanPhams", ThisKey="mahd", OtherKey="mahd")]
		internal EntitySet<HoaDon_SanPham> HoaDon_SanPhams
		{
			get
			{
				return this._HoaDon_SanPhams;
			}
			set
			{
				this._HoaDon_SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_KhachHang", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChitietHDs(ChitietHD entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_ChitietHDs(ChitietHD entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
		
		private void attach_HoaDon_SanPhams(HoaDon_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_HoaDon_SanPhams(HoaDon_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon_SanPham")]
	public partial class HoaDon_SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _masp;
		
		private string _mahd;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaspChanging(string value);
    partial void OnmaspChanged();
    partial void OnmahdChanging(string value);
    partial void OnmahdChanged();
    #endregion
		
		public HoaDon_SanPham()
		{
			this._HoaDon = default(EntityRef<HoaDon>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masp", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string masp
		{
			get
			{
				return this._masp;
			}
			set
			{
				if ((this._masp != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaspChanging(value);
					this.SendPropertyChanging();
					this._masp = value;
					this.SendPropertyChanged("masp");
					this.OnmaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mahd", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mahd
		{
			get
			{
				return this._mahd;
			}
			set
			{
				if ((this._mahd != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmahdChanging(value);
					this.SendPropertyChanging();
					this._mahd = value;
					this.SendPropertyChanged("mahd");
					this.OnmahdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_HoaDon_SanPham", Storage="_HoaDon", ThisKey="mahd", OtherKey="mahd", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.HoaDon_SanPhams.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.HoaDon_SanPhams.Add(this);
						this._mahd = value.mahd;
					}
					else
					{
						this._mahd = default(string);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_HoaDon_SanPham", Storage="_SanPham", ThisKey="masp", OtherKey="masp", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.HoaDon_SanPhams.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.HoaDon_SanPhams.Add(this);
						this._masp = value.masp;
					}
					else
					{
						this._masp = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private string _hoten;
		
		private string _gioitinh;
		
		private System.Nullable<System.DateTime> _namsinh;
		
		private string _diachi;
		
		private string _sodienthoai;
		
		private System.Nullable<bool> _quyenhan;
		
		private System.Nullable<bool> _active;
		
		private int _id;
		
		private EntitySet<HoaDon> _HoaDons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnhotenChanging(string value);
    partial void OnhotenChanged();
    partial void OngioitinhChanging(string value);
    partial void OngioitinhChanged();
    partial void OnnamsinhChanging(System.Nullable<System.DateTime> value);
    partial void OnnamsinhChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    partial void OnsodienthoaiChanging(string value);
    partial void OnsodienthoaiChanged();
    partial void OnquyenhanChanging(System.Nullable<bool> value);
    partial void OnquyenhanChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public KhachHang()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoten", DbType="NVarChar(50)")]
		public string hoten
		{
			get
			{
				return this._hoten;
			}
			set
			{
				if ((this._hoten != value))
				{
					this.OnhotenChanging(value);
					this.SendPropertyChanging();
					this._hoten = value;
					this.SendPropertyChanged("hoten");
					this.OnhotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioitinh", DbType="NVarChar(50)")]
		public string gioitinh
		{
			get
			{
				return this._gioitinh;
			}
			set
			{
				if ((this._gioitinh != value))
				{
					this.OngioitinhChanging(value);
					this.SendPropertyChanging();
					this._gioitinh = value;
					this.SendPropertyChanged("gioitinh");
					this.OngioitinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namsinh", DbType="Date")]
		public System.Nullable<System.DateTime> namsinh
		{
			get
			{
				return this._namsinh;
			}
			set
			{
				if ((this._namsinh != value))
				{
					this.OnnamsinhChanging(value);
					this.SendPropertyChanging();
					this._namsinh = value;
					this.SendPropertyChanged("namsinh");
					this.OnnamsinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(50)")]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sodienthoai", DbType="NVarChar(50)")]
		public string sodienthoai
		{
			get
			{
				return this._sodienthoai;
			}
			set
			{
				if ((this._sodienthoai != value))
				{
					this.OnsodienthoaiChanging(value);
					this.SendPropertyChanging();
					this._sodienthoai = value;
					this.SendPropertyChanged("sodienthoai");
					this.OnsodienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quyenhan", DbType="Bit")]
		public System.Nullable<bool> quyenhan
		{
			get
			{
				return this._quyenhan;
			}
			set
			{
				if ((this._quyenhan != value))
				{
					this.OnquyenhanChanging(value);
					this.SendPropertyChanging();
					this._quyenhan = value;
					this.SendPropertyChanged("quyenhan");
					this.OnquyenhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_HoaDons", ThisKey="username", OtherKey="username")]
		internal EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kho")]
	public partial class Kho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _masp;
		
		private System.Nullable<System.DateTime> _ngay;
		
		private System.Nullable<int> _soluong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmaspChanging(string value);
    partial void OnmaspChanged();
    partial void OnngayChanging(System.Nullable<System.DateTime> value);
    partial void OnngayChanged();
    partial void OnsoluongChanging(System.Nullable<int> value);
    partial void OnsoluongChanged();
    #endregion
		
		public Kho()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masp", DbType="NVarChar(50)")]
		public string masp
		{
			get
			{
				return this._masp;
			}
			set
			{
				if ((this._masp != value))
				{
					this.OnmaspChanging(value);
					this.SendPropertyChanging();
					this._masp = value;
					this.SendPropertyChanged("masp");
					this.OnmaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay", DbType="Date")]
		public System.Nullable<System.DateTime> ngay
		{
			get
			{
				return this._ngay;
			}
			set
			{
				if ((this._ngay != value))
				{
					this.OnngayChanging(value);
					this.SendPropertyChanging();
					this._ngay = value;
					this.SendPropertyChanged("ngay");
					this.OnngayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int")]
		public System.Nullable<int> soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSP")]
	public partial class LoaiSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maloai;
		
		private string _tenloai;
		
		private System.Nullable<bool> _active;
		
		private int _id;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaloaiChanging(string value);
    partial void OnmaloaiChanged();
    partial void OntenloaiChanging(string value);
    partial void OntenloaiChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public LoaiSP()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maloai", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maloai
		{
			get
			{
				return this._maloai;
			}
			set
			{
				if ((this._maloai != value))
				{
					this.OnmaloaiChanging(value);
					this.SendPropertyChanging();
					this._maloai = value;
					this.SendPropertyChanged("maloai");
					this.OnmaloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenloai", DbType="NVarChar(50)")]
		public string tenloai
		{
			get
			{
				return this._tenloai;
			}
			set
			{
				if ((this._tenloai != value))
				{
					this.OntenloaiChanging(value);
					this.SendPropertyChanging();
					this._tenloai = value;
					this.SendPropertyChanged("tenloai");
					this.OntenloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_SanPham", Storage="_SanPhams", ThisKey="maloai", OtherKey="maloai")]
		internal EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuNhap")]
	public partial class PhieuNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mapn;
		
		private System.Nullable<System.DateTime> _ngay;
		
		private System.Nullable<bool> _active;
		
		private int _id;
		
		private EntitySet<ChitietPN> _ChitietPNs;
		
		private EntitySet<PhieuNhap_SanPham> _PhieuNhap_SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmapnChanging(string value);
    partial void OnmapnChanged();
    partial void OnngayChanging(System.Nullable<System.DateTime> value);
    partial void OnngayChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public PhieuNhap()
		{
			this._ChitietPNs = new EntitySet<ChitietPN>(new Action<ChitietPN>(this.attach_ChitietPNs), new Action<ChitietPN>(this.detach_ChitietPNs));
			this._PhieuNhap_SanPhams = new EntitySet<PhieuNhap_SanPham>(new Action<PhieuNhap_SanPham>(this.attach_PhieuNhap_SanPhams), new Action<PhieuNhap_SanPham>(this.detach_PhieuNhap_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mapn", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mapn
		{
			get
			{
				return this._mapn;
			}
			set
			{
				if ((this._mapn != value))
				{
					this.OnmapnChanging(value);
					this.SendPropertyChanging();
					this._mapn = value;
					this.SendPropertyChanged("mapn");
					this.OnmapnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay", DbType="Date")]
		public System.Nullable<System.DateTime> ngay
		{
			get
			{
				return this._ngay;
			}
			set
			{
				if ((this._ngay != value))
				{
					this.OnngayChanging(value);
					this.SendPropertyChanging();
					this._ngay = value;
					this.SendPropertyChanged("ngay");
					this.OnngayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_ChitietPN", Storage="_ChitietPNs", ThisKey="mapn", OtherKey="mapn")]
		internal EntitySet<ChitietPN> ChitietPNs
		{
			get
			{
				return this._ChitietPNs;
			}
			set
			{
				this._ChitietPNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_PhieuNhap_SanPham", Storage="_PhieuNhap_SanPhams", ThisKey="mapn", OtherKey="mapn")]
		internal EntitySet<PhieuNhap_SanPham> PhieuNhap_SanPhams
		{
			get
			{
				return this._PhieuNhap_SanPhams;
			}
			set
			{
				this._PhieuNhap_SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChitietPNs(ChitietPN entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = this;
		}
		
		private void detach_ChitietPNs(ChitietPN entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = null;
		}
		
		private void attach_PhieuNhap_SanPhams(PhieuNhap_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = this;
		}
		
		private void detach_PhieuNhap_SanPhams(PhieuNhap_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuNhap_SanPham")]
	public partial class PhieuNhap_SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _masp;
		
		private string _mapn;
		
		private EntityRef<PhieuNhap> _PhieuNhap;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaspChanging(string value);
    partial void OnmaspChanged();
    partial void OnmapnChanging(string value);
    partial void OnmapnChanged();
    #endregion
		
		public PhieuNhap_SanPham()
		{
			this._PhieuNhap = default(EntityRef<PhieuNhap>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masp", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string masp
		{
			get
			{
				return this._masp;
			}
			set
			{
				if ((this._masp != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaspChanging(value);
					this.SendPropertyChanging();
					this._masp = value;
					this.SendPropertyChanged("masp");
					this.OnmaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mapn", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mapn
		{
			get
			{
				return this._mapn;
			}
			set
			{
				if ((this._mapn != value))
				{
					if (this._PhieuNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmapnChanging(value);
					this.SendPropertyChanging();
					this._mapn = value;
					this.SendPropertyChanged("mapn");
					this.OnmapnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_PhieuNhap_SanPham", Storage="_PhieuNhap", ThisKey="mapn", OtherKey="mapn", IsForeignKey=true)]
		public PhieuNhap PhieuNhap
		{
			get
			{
				return this._PhieuNhap.Entity;
			}
			set
			{
				PhieuNhap previousValue = this._PhieuNhap.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhap.Entity = null;
						previousValue.PhieuNhap_SanPhams.Remove(this);
					}
					this._PhieuNhap.Entity = value;
					if ((value != null))
					{
						value.PhieuNhap_SanPhams.Add(this);
						this._mapn = value.mapn;
					}
					else
					{
						this._mapn = default(string);
					}
					this.SendPropertyChanged("PhieuNhap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_PhieuNhap_SanPham", Storage="_SanPham", ThisKey="masp", OtherKey="masp", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.PhieuNhap_SanPhams.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.PhieuNhap_SanPhams.Add(this);
						this._masp = value.masp;
					}
					else
					{
						this._masp = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
